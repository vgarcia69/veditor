==362664== Memcheck, a memory error detector
==362664== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==362664== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==362664== Command: ./editor todo.txt
==362664== 
==362664== Invalid read of size 4
==362664==    at 0x40214D: update_width (update.c:75)
==362664==    by 0x401FF9: update_win (update.c:34)
==362664==    by 0x4012B9: main (main.c:11)
==362664==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==362664== 
==362664== 
==362664== Process terminating with default action of signal 11 (SIGSEGV)
==362664==  Access not within mapped region at address 0x8
==362664==    at 0x40214D: update_width (update.c:75)
==362664==    by 0x401FF9: update_win (update.c:34)
==362664==    by 0x4012B9: main (main.c:11)
==362664==  If you believe this happened as a result of a stack
==362664==  overflow in your program's main thread (unlikely but
==362664==  possible), you can try to increase the size of the
==362664==  main thread stack using the --main-stacksize= flag.
==362664==  The main thread stack size used in this run was 8388608.
==362664== 
==362664== HEAP SUMMARY:
==362664==     in use at exit: 2,185 bytes in 10 blocks
==362664==   total heap usage: 13 allocs, 3 frees, 6,286 bytes allocated
==362664== 
==362664== LEAK SUMMARY:
==362664==    definitely lost: 0 bytes in 0 blocks
==362664==    indirectly lost: 0 bytes in 0 blocks
==362664==      possibly lost: 0 bytes in 0 blocks
==362664==    still reachable: 2,185 bytes in 10 blocks
==362664==         suppressed: 0 bytes in 0 blocks
==362664== Rerun with --leak-check=full to see details of leaked memory
==362664== 
==362664== For lists of detected and suppressed errors, rerun with: -s
==362664== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
